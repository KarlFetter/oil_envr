out2 <- qst_mod2 %>%
brms::posterior_samples() %>%
select(b_Intercept, sd_block__Intercept, sd_deme__Intercept, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst2 = data.frame(qst =
out2$sd_deme__Intercept^2 /
(out2$b_demesouth^2 + out2$sd_block__Intercept^2 +
out2$sigma^2 + 2 * out2$sd_ind_code__Intercept^2))
# plot the fit
pqst2 <- ggplot(qst2, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod2")
pqst2
head(qst2)
qst_mod2
out2 <- qst_mod2 %>%
brms::posterior_samples() %>%
select(b_Intercept, sd_block__Intercept, sd_deme__Intercept, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst2 = data.frame(qst =
out2$sd_deme__Intercept^2 /
(out2$b_demesouth^2 + out2$sd_block__Intercept^2 +
out2$sigma^2 + 2 * out2$sd_ind_code__Intercept^2))
# plot the fit
pqst2 <- ggplot(qst2, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
out2 <- qst_mod2 %>%
brms::posterior_samples() %>%
select(b_Intercept, sd_block__Intercept, sd_deme__Intercept, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst2 = data.frame(qst =
out2$sd_deme__Intercept^2 /
(out2$b_demesouth^2 + out2$sd_block__Intercept^2 +
out2$sigma^2 + 2 * out2$sd_ind_code__Intercept^2))
# plot the fit
pqst2 <- ggplot(qst2, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod2")
out2 <- qst_mod2 %>%
brms::posterior_samples() %>%
select(b_Intercept, sd_block__Intercept, sd_deme__Intercept, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst2 = data.frame(qst =
out2$sd_deme__Intercept^2 /
(out2$b_demesouth^2 + out2$sd_block__Intercept^2 +
out2$sigma^2 + 2 * out2$sd_ind_code__Intercept^2))
# plot the fit
pqst2 <- ggplot(qst2, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod2")
pqst2
qst2
out2
head(out2)
names(out2)
qst_mod2
# Calculate Qst from the correct variance components.
qst2 = data.frame(qst =
out2$sd_deme__Intercept^2 /
(out2$sd_deme__Intercept^2 + out2$sd_block__Intercept^2 +
out2$sigma^2 + 2 * out2$sd_ind_code__Intercept^2))
qst2
# plot the fit
pqst2 <- ggplot(qst2, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod2")
pqst2
median(qst2)
summary(qst2)
qst_mod1 %>%
brms::posterior_samples() %>% names %>% head()
out1 <- qst_mod1 %>%
brms::posterior_samples() %>%
select(b_Intercept, b_demesouth, sd_block__Intercept, sd_ind_code__Intercept, sigma)
head(out1)
# Calculate Qst from the correct variance components.
qst1 = data.frame(qst =
out1$b_demesouth^2 /
(out1$b_demesouth^2 + out1$sd_block__Intercept^2 +
out1$sigma^2 + 2 * out1$sd_ind_code__Intercept^2))
qst1
# plot the fit
pqst2 <- ggplot(qst1, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod1")
# plot the fit
pqst2 <- ggplot(qst2, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod2")
# plot the fit
pqst1 <- ggplot(qst2, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod2")
pqst1
qst_mod0 %>%
brms::posterior_samples() %>% names() %>% head()
out0 <- qst_mod0 %>%
brms::posterior_samples() %>%
select(b_Intercept, b_block, b_demesouth, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst0 = data.frame(qst =
out0$b_demesouth^2 /
(out2$b_demesouth^2 + out2$b_block^2 +
out2$sigma^2 + 2 * out2$sd_ind_code__Intercept^2))
qst0
# Calculate Qst from the correct variance components.
qst0 = data.frame(qst =
out0$b_demesouth^2 /
(out0$b_demesouth^2 + out0$b_block^2 +
out0$sigma^2 + 2 * out0$sd_ind_code__Intercept^2))
# plot the fit
pqst0 <- ggplot(qst0, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod0")
out0 <- qst_mod0 %>%
brms::posterior_samples() %>%
select(b_Intercept, b_block, b_demesouth, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst0 = data.frame(qst =
out0$b_demesouth^2 /
(out0$b_demesouth^2 + out0$b_block^2 +
out0$sigma^2 + 2 * out0$sd_ind_code__Intercept^2))
# plot the fit
pqst0 <- ggplot(qst0, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod0")
pqst0
cowplot::plot_grid(pqst0, pqst1, pqst2, pqst3, pqst4, ncol=3)
out0 <- qst_mod0 %>%
brms::posterior_samples() %>%
select(b_Intercept, b_block, b_demesouth, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst0 = data.frame(qst =
out0$b_demesouth^2 /
(out0$b_demesouth^2 + out0$b_block^2 +
out0$sigma^2 + 2 * out0$sd_ind_code__Intercept^2))
# plot the fit
pqst0 <- ggplot(qst0, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod0")
out1 <- qst_mod1 %>%
brms::posterior_samples() %>%
select(b_Intercept, b_demesouth, sd_block__Intercept, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst1 = data.frame(qst =
out1$b_demesouth^2 /
(out1$b_demesouth^2 + out1$sd_block__Intercept^2 +
out1$sigma^2 + 2 * out1$sd_ind_code__Intercept^2))
# plot the fit
pqst1 <- ggplot(qst1, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod1")
out2 <- qst_mod2 %>%
brms::posterior_samples() %>%
select(b_Intercept, sd_block__Intercept, sd_deme__Intercept, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst2 = data.frame(qst =
out2$sd_deme__Intercept^2 /
(out2$sd_deme__Intercept^2 + out2$sd_block__Intercept^2 +
out2$sigma^2 + 2 * out2$sd_ind_code__Intercept^2))
# plot the fit
pqst2 <- ggplot(qst2, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod2")
out3 <- qst_mod3 %>%
brms::posterior_samples() %>%
select(b_Intercept, b_block, sd_ind_code__demesouth, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst3 = data.frame(qst =
out3$sd_ind_code__demesouth^2 /
(out3$sd_ind_code__demesouth^2 + out3$b_block^2 +
out3$sigma^2 + 2 * out3$sd_ind_code__Intercept^2))
# plot the fit
pqst3 <- ggplot(qst3, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod3")
out4 <- qst_mod4 %>%
brms::posterior_samples() %>%
select(b_Intercept, sd_block__Intercept,
sd_ind_code__demesouth, sd_ind_code__Intercept, sigma)
# Calculate Qst from the correct variance components.
qst4 = data.frame(qst =
out4$sd_ind_code__demesouth^2 /
(out4$sd_ind_code__demesouth^2 + out4$sd_block__Intercept^2 +
out4$sigma^2 + 2 * out4$sd_ind_code__Intercept^2))
# plot the fit
pqst4 <- ggplot(qst4, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod4")
cowplot::plot_grid(pqst0, pqst1, pqst2, pqst3, pqst4, ncol=3)
getwd()
setwd("figs")
# Histograms in a single plot
phist <- cowplot::plot_grid(pqst0, pqst1, pqst2, pqst3, pqst4, ncol=3)
ggsave("qst_histograms.pdf", phist, width=6, height = 3.5)
# plot the fit
pqst4 <- ggplot(qst4, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod4") +
xlim(0,1)
pqst4
# plot the fit
pqst4 <- ggplot(qst4, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod4") +
lims(x=c(0,1))
pqst4
?lims
# plot the fit
pqst4 <- ggplot(qst4, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod4") +
xlim(0,1)
pqst4
# plot the fit
pqst2 <- ggplot(qst2, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod2") +
xlim(0,1)
# plot the fit
pqst3 <- ggplot(qst3, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod3") +
xlim(0,1)
# plot the fit
pqst1 <- ggplot(qst1, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod1") +
xlim(0,1)
# plot the fit
pqst0 <- ggplot(qst0, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod0") +
xlim(0,1)
# Histograms in a single plot
phist <- cowplot::plot_grid(pqst0, pqst1, pqst2, pqst3, pqst4, ncol=3)
ggsave("qst_histograms.pdf", phist, width=6, height = 3.5)
# plot the fit
pqst4 <- ggplot(qst4, aes(x=qst)) +
geom_histogram(bins = 30, color="black", fill="grey", lwd=0.3, drop = TRUE) +
theme_minimal() +
labs(y="", x=expression(italic(Q)[ST]), title="qst_mod4") +
xlim(0,1)
pqst4
rnorm(10000) %>%
as_tibble() -> dat
dat %>%
ggplot(aes(value)) +
geom_histogram(color = 'black', fill = 'grey70') +
annotate(geom = 'text', x = 15, y = 1500, label = my_label,
hjust = 1, size = 3, color = "#cc0000") +
theme_void() +
geom_histogram(data = tibble(value=1:15), color = 'white')
my_label <- "text"
rnorm(10000) %>%
as_tibble() -> dat
dat %>%
ggplot(aes(value)) +
geom_histogram(color = 'black', fill = 'grey70') +
annotate(geom = 'text', x = 15, y = 1500, label = my_label,
hjust = 1, size = 3, color = "#cc0000") +
theme_void() +
geom_histogram(data = tibble(value=1:15), color = 'white')
summary(qst3)
phist
pr2
# Compare best fit with loo
loo_compare(qst_mod0, qst_mod1, qst_mod2, qst_mod3, qst_mod4)
qst_fst0 <- data.frame(qst = qst0) %>% mutate(stat = qst - 0.21)
qst_fst1 <- data.frame(qst = qst1) %>% mutate(stat = qst - 0.21)
qst_fst2 <- data.frame(qst = qst2) %>% mutate(stat = qst - 0.21)
qst_fst3 <- data.frame(qst = qst3) %>% mutate(stat = qst - 0.21)
qst_fst4 <- data.frame(qst = qst4) %>% mutate(stat = qst - 0.21)
# View the Qst-Fst estimates
p0 <- ggplot(qst_fst0, aes(x=stat))  +
geom_histogram(bins = 25, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(x=expression(paste(italic(Q)[ST] - italic(F)[ST])))
p0
# Histograms as a single ggridges plot
dat <- data.frame(
qst0 = qst0, qst1 = qst1, qst2 = qst2, qst3 = qst3, qst4 = qst4
)
head(dat)
head(iris)
tail(iris)
rbind(c(qst0, qst1, qst2, qst3, qst4))
c(qst0, qst1)
head(qst0)
head(qst1)
rbind(qst0, qst1) %>% head*()
rbind(qst0, qst1) %>% head()
rbind(qst0, qst1) %>% dim()
rbind(qst0, qst1, qst2, qst3, qst4) %>% dim()
dim(qst0)
# Histograms as a single ggridges plot
dat <- data.frame(
qst = rbind(qst0, qst1, qst2, qst3, qst4),
model = c(rep(qst0, 12000),rep(qst1, 12000),rep(qst2, 12000),
rep(qst3, 12000),rep(qst4, 12000))
)
dim(dat)
dim(c(rep(qst0, 12000), rep(qst1, 12000), rep(qst2, 12000),
rep(qst3, 12000), rep(qst4, 12000)))
length(c(rep(qst0, 12000), rep(qst1, 12000), rep(qst2, 12000),
rep(qst3, 12000), rep(qst4, 12000)))
c(rep(qst0, 12000), rep(qst1, 12000), rep(qst2, 12000),
rep(qst3, 12000), rep(qst4, 12000))
c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000))
dim(c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000)))
length(c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000)))
# Histograms as a single ggridges plot
dat <- data.frame(
qst = rbind(qst0, qst1, qst2, qst3, qst4),
model = c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000))
)
head(dat)
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges2()
library(ggridges)
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges2()
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges2(scale=0.5)
?geom_density_ridges2
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges2(scale=0.2)
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges2(scale=1)
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges2(scale=0.75)
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges2(scale=0.5)
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges(scale=0.5)
?geom_density_ridges
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges()
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges(scale=0.01)
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges(scale=1)
ggplot(dat, aes(x=qst, y=model)) + geom_density_ridges()
ggplot(dat, aes(x=qst, y=model)) +
geom_density_ridges(rel_min_height = 0.01)
dev.off()
ggplot(dat, aes(x=qst, y=model)) +
geom_density_ridges()
ggplot(dat, aes(x=qst, y=model)) +
geom_density_ridges(rel_min_height = 0.01)
summary(qst3)
summary(qst4)
summary(qst1)
ggplot(dat, aes(x=qst, y=model)) +
geom_density_ridges(rel_min_height = 0.01,
quantile_lines = TRUE,
quantiles = c(0.025, 0.975),
alpha = 0.7)
phist1 <- ggplot(dat, aes(x=qst, y=model)) +
geom_density_ridges(rel_min_height = 0.01,
quantile_lines = TRUE,
quantiles = c(0.025, 0.975),
alpha = 0.7)
ggsave("qst_ridges_v0.pdf", phist1, width=6, height=6)
range(qst0)
range(qst4)
plot(qst_mod2)
stancode(qst_mod4)
# View the Qst-Fst estimates
p0 <- ggplot(qst_fst0, aes(x=stat))  +
geom_histogram(bins = 25, color="black", fill="grey", lwd=0.3) +
theme_minimal() +
labs(x=expression(paste(italic(Q)[ST] - italic(F)[ST])))
p0
head(qst_fst0 )
# Create the object for the ggridges plot
dat1 <- data.frame(
qst=rbind(qst0$stat, qst1$stat, qst2$stat, qst3$stat, qst4$stat),
model = c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000))
)
qst0$stat
# Create the object for the ggridges plot
dat1 <- data.frame(
qst=rbind(qst_fst0$stat, qst_fst1$stat, qst_fst2$stat,
qst_fst3$stat, qst_fst4$stat),
model = c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000))
)
pphist
phist1
phist1 <- ggplot(dat, aes(x=qst, y=model)) +
geom_density_ridges(rel_min_height = 0.01,
quantile_lines = TRUE,
quantiles = c(0.025, 0.975),
alpha = 0.7) +
labs(x=expression(italic(Q)[ST]))
ggsave("qst_ridges_v0.pdf", phist1, width=6, height=6)
# Create the object for the ggridges plot
dat1 <- data.frame(
stat=rbind(qst_fst0$stat, qst_fst1$stat, qst_fst2$stat,
qst_fst3$stat, qst_fst4$stat),
model = c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000))
)
# View the Qst-Fst estimates
phist2 <- ggplot(dat1, aes(x=stat, y=model)) +
geom_density_ridges(rel_min_height = 0.01,
quantile_lines = TRUE,
quantiles = c(0.025, 0.975),
alpha = 0.7) +
labs(x=expression(paste(italic(Q)[ST] - italic(F)[ST])))
phist2
head(dat1)
qst_fst0$stat
stat=rbind(qst_fst0$stat, qst_fst1$stat, qst_fst2$stat,
qst_fst3$stat, qst_fst4$stat)
dim(stat)
head(stat)
qst_fst0 <- data.frame(qst = qst0) %>% mutate(stat = qst - 0.21)
qst_fst1 <- data.frame(qst = qst1) %>% mutate(stat = qst - 0.21)
qst_fst2 <- data.frame(qst = qst2) %>% mutate(stat = qst - 0.21)
qst_fst3 <- data.frame(qst = qst3) %>% mutate(stat = qst - 0.21)
qst_fst4 <- data.frame(qst = qst4) %>% mutate(stat = qst - 0.21)
qst_fst0 %>% head()
qst_fst0$stat %>% head()
# Create the object for the ggridges plot
dat1 <- data.frame(
stat=rbind(qst_fst0$stat, qst_fst1$stat, qst_fst2$stat,
qst_fst3$stat, qst_fst4$stat),
model = c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000))
)
dim(dat1)
rm(dat1)
ls()
rm(stat)
# Create the object for the ggridges plot
dat1 <- data.frame(
stat=rbind(qst_fst0$stat, qst_fst1$stat, qst_fst2$stat,
qst_fst3$stat, qst_fst4$stat))
head(dat1)
qst_fst0 <- data.frame(qst = qst0) %>% mutate(stat = qst - 0.21)
qst_fst1 <- data.frame(qst = qst1) %>% mutate(stat = qst - 0.21)
qst_fst2 <- data.frame(qst = qst2) %>% mutate(stat = qst - 0.21)
qst_fst3 <- data.frame(qst = qst3) %>% mutate(stat = qst - 0.21)
qst_fst4 <- data.frame(qst = qst4) %>% mutate(stat = qst - 0.21)
rm(dat1)
rbind(qst_fst0$stat, qst_fst1$stat) %>% head()
c(qst_fst0$stat, qst_fst1$stat) %>% head()
# Create the object for the ggridges plot
dat1 <- data.frame(
stat=c(qst_fst0$stat, qst_fst1$stat, qst_fst2$stat,
qst_fst3$stat, qst_fst4$stat),
model = c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000))
)
dim(dat1)
head(dat1)
# Create the object for the ggridges plot
dat1 <- data.frame(
stat=c(qst_fst0$stat, qst_fst1$stat, qst_fst2$stat,
qst_fst3$stat, qst_fst4$stat),
model = c(rep("qst0", 12000), rep("qst1", 12000),
rep("qst2", 12000), rep("qst3", 12000), rep("qst4", 12000))
)
# View the Qst-Fst estimates
phist2 <- ggplot(dat1, aes(x=stat, y=model)) +
geom_density_ridges(rel_min_height = 0.01,
quantile_lines = TRUE,
quantiles = c(0.025, 0.975),
alpha = 0.7) +
labs(x=expression(paste(italic(Q)[ST] - italic(F)[ST])))
phist2
summary(qst0)
summary(qst4)
summary(qst3)
ggsave("qst-fst_ridges_v0.pdf", phist2, width=6, height=6)
head(out3)
# View the Qst-Fst estimates
phist2 <- ggplot(dat1, aes(x=stat, y=model)) +
geom_density_ridges(rel_min_height = 0.01,
quantile_lines = TRUE,
quantiles = c(0.025, 0.975),
alpha = 0.7) +
labs(x=expression(paste(italic(Q)[ST] - italic(F)[ST]))) +
xlim(-0.3,1)
ggsave("qst-fst_ridges_v0.pdf", phist2, width=6, height=6)
data(data_Freqs)
freqMat <- data_Freqs
sampMat <- matrix(rep(30, 32), nrow=4, ncol=8)
rownames(sampMat) <- paste0('Pop', 1:4)
colnames(sampMat) <- colnames(freqMat); rownames(sampMat) <- rownames(freqMat)
install.packages('FinePop')
# FinePop may be a tool I can use to do this.
library(FinePop)
q()

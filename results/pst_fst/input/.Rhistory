install.packages("cowplot")
library(ggtree)
library(ggarrange)
install.packages("ggtree")
install.packages("ggarrange")
install.packages("cowplot")
?lm
q()
q()
971/1071
765.16 - 734.87
20000 / 0.007
20000 * 0.007
q()
100 * 16.88
1966-1688
250 * 5
1250 * 4
5000 * 12
20.35-19.11
1.24 * 100
19.11 * 100
2190 - 1700
29.2477-26.97
29.2477-25.36
26.74-22.51
250 * 0.25
250 - 62.5
10 * 16.88
196.6 - 168.8
310.45 - 285.9
19.11 * 0.025
19.11 - 0.478
28.60 + 0.025
28.625 * 10
28.625 + 0.025
28.625 + 0.05
28.60 + 0.025
28.60 + (28.60*0.025)
29.315 + (29.315*0.025)
300.48 - 293.15
1966 - 1688
1688 + (1688 * 0.1)
1688 + (1688 * 0.2)
1688 + (1688 * 0.15)
1688 + (1688 * 0.17)
1688 + (1688 * 0.16)
1688 + (1688 * 0.165)
1688 + (1688 * 0.15)
1688 + (1688 * 0.14)
1688 + (1688 * 0.13)
1688 + (1688 * 0.1)
1856-1688
(29.2477-25.36)*100
(29.2477-25.36)/100
(29.2477-25.36)
((29.2477-25.36)/25.36)*100
((29.2477-25.36)/25.36)*100
ddm = ((29.2477-25.36)/25.36)*100
spxl=((26.74-21.48)/21.48)*100
cfg=((19.66-16.88)/16.88)*100
data.frame(perc_change=c(ddm, spxl,cfg))
data.frame(perc_change=c(ddm, spxl,cfg), names=ddm,spxl,cfg))
?data.frame
data.frame(perc_change=c(ddm, spxl,cfg), row.names=c("ddm","spxl","cfg"))
data.frame(perc_change=c(ddm, spxl,cfg), row.names=c("ddm","spxl","cfg"))
data.frame(perc_change=c(ddm, spxl,cfg), row.names=c("ddm","spxl","cfg"))
21.48 * 100
data.frame(perc_change=c(ddm, spxl,cfg), row.names=c("ddm","spxl","cfg"))
2674 - 2148
1966 - 1688
data.frame(perc_change=c(ddm, spxl,cfg), row.names=c("ddm","spxl","cfg"))
2674 - 2148
1966 - 1688
278/526
2148-1688
((2148-1688)/1688)*100
2190-1700
490 + (490*0.15)
(490 + (490*0.15)) - 490
50/1258
1258/50
1258/20
1258/200
2500/200
q()
ls()
dat <- data.frame(perc_change=c(ddm, spxl,cfg), row.names=c("ddm","spxl","cfg"))
dat
q()
dat
dat
19.11 - (19.11*0.03)
tmp <- c(17, 17.50)
tmp
tmp * 2
tmp + (tmp* 0.1)
17/490
490/17
490/17.50
19.25* 28
539 - (17 * 28)
968-850
900-780
(653*10)-(38.45*10)
600 - 578
38 * (10 * 0.0165)
50/650
17/10000
10000/17
588*17
588 * 19
11172-10000
1000 * 0.9325
1000 * 0.09325
1000 - 490
510 * 0.0932
17/1000
1000/17
58.82*19
1117-1000
117-47
17/490
490/17
28.82*19
547-490
500 * 0.09325
46.625/360
(46.625/360)*1
50000/17
(50000/17)*19
((50000/17)*19)-50000
578 + (578 * 0.0394)
17.25 * 20
17.25 * 50
1000/17.25
((17.75-17.30)/17.30)*100
((17.67-17.30)/17.30)*100
1050/58
(19.00-17.30)/17.30)*100
((19.00-17.30)/17.30)*100
500 * 17.46
500/17.46
28.63688 * 17.56
28.63688 * 17.70
((17.95-17.30)/17.30)*100
1003/17.30
58 * 17.95
q()
install.packages(c("bayestestR", "bridgesampling", "brms", "broom", "cli", "covr", "crosstalk", "digest", "dplyr", "DT", "effectsize", "emmeans", "farver", "forcats", "fs", "ggeffects", "ggplot2", "ggpubr", "ggrepel", "glue", "igraph", "insight", "knitr", "lifecycle", "matrixStats", "mime", "modelr", "mvtnorm", "nloptr", "parameters", "performance", "plyr", "Rcpp", "RcppArmadillo", "rlang", "shiny", "sjPlot", "sjstats", "stringi", "tinytex", "vctrs", "xfun", "xml2", "yaml"))
install.packages(c("boot", "foreign", "lattice", "MASS", "nlme", "nnet", "survival"), lib="/usr/local/Cellar/r/3.6.2/lib/R/library")
library(brms)
library(RStan)
library(dplyr)
install.packages("brms")
library("brms")
install.packages("pkgbuild"
)
install.packages("pkgbuild")
library("pkgbuild")
library("brms")
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
remove.packages("brms")
if (file.exists(".RData")) file.remove(".RData")
q()
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, ifelse(.Platform$OS.type == "windows", "Makevars.win", "Makevars"))
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS=-O3 -march=native -mtune=native",
if( grepl("^darwin", R.version$os)) "CXX14FLAGS += -arch x86_64 -ftemplate-depth-256" else
if (.Platform$OS.type == "windows") "CXX11FLAGS=-O3 -march=corei7 -mtune=corei7" else
"CXX14FLAGS += -fPIC",
file = M, sep = "\n", append = TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
install.packages("brms")
library(brms)
library("rstan")
devtools::session_info(“rstan”)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
Sys.setenv(MAKEFLAGS = "-j4")
install.packages("rstan", type = "source")
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
remove.packages("brms")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
library("rstan")
install.packages("brms")
q()
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
libray("RStan")
library("RStan")
library"Rstan"
library("Rstan")
library("rstan")
Sys.unsetenv("PKG_CXXFLAGS")
library("rstan")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstantools)
library(brms)
install.packages("brms")
library(brms)
Rcpp::sourceCpp(“helloworld.cpp”
Rcpp::sourceCpp(“helloworld.cpp”)
Rcpp::sourceCpp(“helloworld.cpp”)
Rcpp::sourceCpp("helloworld.cpp")
install.packages("Rcpp")
install.packages("Rcpp")
library(Rcpp)
Rcpp::sourceCpp("helloworld.cpp")
Rcpp::sourceCpp(“helloworld.cpp”)
library(rstan)
install.packages("rstan")
install.packages("rstan")
remove.packages("rstan")
install.packages("rstan", type = "source")
remove.packages("rstan")
remotes::install_github("stan-dev/rstan", ref = "develop",
subdir = "rstan/rstan", build_opts = "")
install.packages("tictoc")
library(parallel)
devtools::install_github("paul-buerkner/brms")
install.packages("devtools")
library("devtools")
devtools::install_github("hadley/devtools")
install.packages("devtools")
rstudio &
install.packages("testthat")
library(Rcpp)
install.packages("devtools", repo = 'https://mac.R-project.org')
library(brms)
?dplyr::left_join
187.5 + 45.36
b = 13.05 * 1000
b
sl = * 13.80 * 1000
sl =  13.80 * 1000
sl - b
ls()
base_q = (27500)/2
base_q
base_q/45
install.packages(c("brms", "ggplot2"))
library(ggplot2)
install.packages("ggplot2")
install.packages("cowplot")
library(dplyr)
q()
#Install packages (Do this section only for new installation of R)
#-------------------------------------------------------------------------------
source("http://www.bioconductor.org/biocLite.R")
biocLite("multtest")
install.packages("gplots")
library("gplots")
source("http://zzlab.net/GAPIT/GAPIT.library.R") source("http://zzlab.net/GAPIT/gapit_functions.txt")
source("http://zzlab.net/GAPIT/GAPIT.library.R") source("http://zzlab.net/GAPIT/gapit_functions.txt")
source("http://zzlab.net/GAPIT/GAPIT.library.R")
source("http://zzlab.net/GAPIT/gapit_functions.txt")
library(LDheatmap)
source("http://www.zzlab.net/GAPIT/emma.txt")
source("http://www.zzlab.net/GAPIT/gapit_functions.txt")
ancestry <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/ancestry_data.txt",T,'\t')
z.dat_in <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/rescaled_data_by-area_id_N-1539.dat",T,'\t')
z.dat <- full_join(z.dat_in, ancestry, by = "ind_code")
library(tidyverse)
library(brms)
ancestry <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/ancestry_data.txt",T,'\t')
z.dat_in <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/rescaled_data_by-area_id_N-1539.dat",T,'\t')
z.dat <- full_join(z.dat_in, ancestry, by = "ind_code")
z.dat
names(z.dat)
# Build a some models to explore the effect of the S ~ D relationship on R
fit0 <- brm(r1 ~ z.S + z.D + prop_B + (1|ind_code),
data = z.dat,
family = cumulative(),
cores = getOption("mc.cores", 4L),
control = list(adapt_delta = 0.99, max_treedepth = 15)) %>%
add_criterion("loo")
R.Version
R.Version()
library(tidyverse)
library(brms)
ancestry <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/ancestry_data.txt",T,'\t')
z.dat_in <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/rescaled_data_by-area_id_N-1539.dat",T,'\t')
z.dat <- full_join(z.dat_in, ancestry, by = "ind_code")
# Input data by image
mod0 <- brm(r1 ~ z.gsmax + z.fs + z.fs:z.gsmax + prop_B + (1|ind_code),
data = z.dat,
family = cumulative(),
chains = 4L, seed = 2398, iter = 8000,
cores = getOption("mc.cores", 4L),
control=list(adapt_delta=0.99, max_treedepth = 15)) %>%
add_criterion("loo", reloo = "TRUE")
cl <- parallel::makeCluster(2, setup_strategy = "sequential")
cl
ancestry <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/ancestry_data.txt",T,'\t')
z.dat_in <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/rescaled_data_by-area_id_N-1539.dat",T,'\t')
z.dat <- full_join(z.dat_in, ancestry, by = "ind_code")
# Input data by image
mod0 <- brm(r1 ~ z.gsmax + z.fs + z.fs:z.gsmax + prop_B + (1|ind_code),
data = z.dat,
family = cumulative(),
chains = 4L, seed = 2398, iter = 8000,
cores = getOption("mc.cores", 4L),
control=list(adapt_delta=0.99, max_treedepth = 15)) %>%
add_criterion("loo", reloo = "TRUE")
R.Version()
library(brms)
library(tidybayes)
ancestry <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/ancestry_data.txt",T,'\t')
z.dat_in <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/rescaled_data_by-area_id_N-1539.dat",T,'\t')
z.dat <- full_join(z.dat_in, ancestry, by = "ind_code")
# Input data by image
mod0 <- brm(r1 ~ z.gsmax + z.fs + z.fs:z.gsmax + prop_B + (1|ind_code),
data = z.dat,
family = cumulative(),
chains = 4L, seed = 2398, iter = 8000,
cores = getOption("mc.cores", 4L),
control=list(adapt_delta=0.99, max_treedepth = 15)) %>%
add_criterion("loo", reloo = "TRUE")
library(tidyverse)
ancestry <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/ancestry_data.txt",T,'\t')
z.dat_in <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/rescaled_data_by-area_id_N-1539.dat",T,'\t')
z.dat <- full_join(z.dat_in, ancestry, by = "ind_code")
# Input data by image
mod0 <- brm(r1 ~ z.gsmax + z.fs + z.fs:z.gsmax + prop_B + (1|ind_code),
data = z.dat,
family = cumulative(),
chains = 4L, seed = 2398, iter = 8000,
cores = getOption("mc.cores", 4L),
control=list(adapt_delta=0.99, max_treedepth = 15)) %>%
add_criterion("loo", reloo = "TRUE")
rstan:::get_CXX()
R.Version()
ancestry <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/ancestry_data.txt",T,'\t')
z.dat_in <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/rescaled_data_by-area_id_N-1539.dat",T,'\t')
z.dat <- full_join(z.dat_in, ancestry, by = "ind_code")
# Input data by image
mod0 <- brm(r1 ~ z.gsmax + z.fs + z.fs:z.gsmax + prop_B + (1|ind_code),
data = z.dat,
family = cumulative(),
chains = 4L, seed = 2398, iter = 8000,
cores = getOption("mc.cores", 4L),
control=list(adapt_delta=0.99, max_treedepth = 15)) %>%
add_criterion("loo", reloo = "TRUE")
ancestry <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/ancestry_data.txt",T,'\t')
z.dat_in <- read.table("~/Dropbox/hybrid_trait/results/data2go/brms/rescaled_data_by-area_id_N-1539.dat",T,'\t')
z.dat <- full_join(z.dat_in, ancestry, by = "ind_code")
# Input data by image
mod0 <- brm(r1 ~ z.gsmax + z.fs + z.fs:z.gsmax + prop_B + (1|ind_code),
data = z.dat,
family = cumulative(),
chains = 4L, seed = 2398, iter = 8000,
cores = getOption("mc.cores", 4L),
control=list(adapt_delta=0.99, max_treedepth = 15)) %>%
add_criterion("loo", reloo = "TRUE")
38 / 38 + 0
38 / 38 + 0
0 / 38 + 0
34 / (34 + 0)
0 / (34 + 0)
s_in <- read.table("~/Dropbox/hybrid_trait/data/stomata/stomata_data_area_id.txt",T,'\t')
s_in
head(s_in)
s_in <- read.table("~/Dropbox/hybrid_trait/data/stomata/stomata_data_area_id.txt",T,'\t')
map <- read.table("~/Dropbox/hybrid_trait/data/meta_data/map/VT_gardenMap_MASTER_fixed.csv",T,',')
# merge the two
s <- left_join(s_in, map, by="rep_code") %>%
select(ind_code = ind_code.x, rep_code = rep_code, area_id,
row = row_num, col = tree_num, ad_presence, ab_stomata_count,
ad_stomata_count, ab_pore_length, ad_pore_length, ab_porosity,
ad_porosity, to_porosity)
library(tidyverse)
jjjjjjjjjjjjjjjj
s_in <- read.table("~/Dropbox/hybrid_trait/data/stomata/stomata_data_area_id.txt",T,'\t')
map <- read.table("~/Dropbox/hybrid_trait/data/meta_data/map/VT_gardenMap_MASTER_fixed.csv",T,',')
# merge the two
s <- left_join(s_in, map, by="rep_code") %>%
select(ind_code = ind_code.x, rep_code = rep_code, area_id,
row = row_num, col = tree_num, ad_presence, ab_stomata_count,
ad_stomata_count, ab_pore_length, ad_pore_length, ab_porosity,
ad_porosity, to_porosity)
s
head(s)
q()
#library(poppr)
#library(radiator)
setwd("~/Dropbox/oil_envr/data/dryad/")
# Read in the GenAlEx file as a genind object
snps <- poppr::read.genalex("genotypes.csv", genclone = F)
# Verify the format of the data
radiator::detect_genomic_format(snps)
# Convert genind to genlight
snps.gl <- dartR::gi2gl(snps)
snps.gl
library(dartR)
# Convert genind to genlight
snps.gl <- gi2gl(snps)
gi2gl
snps.gl
# Convert genlight to plink
gl2plink(snps.gl, outfile = "wild_annuus_N286_snps246")
getwd()
list.files()
# Convert genlight to plink
gl2plink(snps.gl, outfile = "wild_annuus_N286_snps246")
write.table(1:10, file="blim")
gl2plink(snps.gl)
getwd()
class(snps.gl)
tempdir()
gl2plink(snps.gl, outfile = "plink.csv", outpath = "./")
# Convert genlight to plink
gl2plink(snps.gl, outfile = "wild_annuus_n286_snps246.plink.csv", outpath = "./")
# Also save as a fasta file
gl2fasta(snps.gl, outfile = "wild_annuus_n286_snps246.fasta", outpath = "./")
library(devtools)
install_github("kjgilbert/QstFstComp")
library(QstFstComp)
?QstFstComp
snos
snps
snps
genind2hierfstat(snps)
?genind2hierfstat
# Export data in hierfstat format for QstFstComp
write.table(hierfstat::genind2hierfstat(snps), file="wild_annuus_N286_snps246.hierfstat", quote=F, sep=',')
# Create the input data
fst <- read.delim("wild_annuus_N286_snps246.hierfstat")
fst
# Create the input data
fst <- read.delim("wild_annuus_N286_snps246.hierfstat", sep=',')
head(fst)
setwd("~/Dropbox/oil_envr/results/qst_fst/input/")
list.files()
# Read in trait data in Qst format
TraitInfo <- read.csv("saturated_fatty_acid.qst.csv")
# Read in SNP data in hierfstat format
MarkerInfo <- read.csv("wild_annuus_N286_snps246.hierfstat")
MarkerInfo
TraitInfo
table(TraitInfo$pop_code)
# Run the analysis
sim <- QstFstComp(fst.dat = MarkerInfo, qst.dat = TraitInfo, numpops = 14, breeding.design = "half.sib.dam", nsim = 10000)
# Run the analysis
sim <- QstFstComp(fst.dat = MarkerInfo,
qst.dat = TraitInfo,
numpops = 14,
breeding.design = "half.sib.sire",
nsim = 10000)
# Run the analysis
sim <- QstFstComp(fst.dat = MarkerInfo,
qst.dat = TraitInfo,
numpops = 14,
nsim = 10000)
# Run the analysis
sim <- QstFstComp(fst.dat = MarkerInfo,
qst.dat = TraitInfo,
numpops = 14,
breeding.design = "half.sib.dam",
nsim = 10000)
# Run the analysis
sim <- QstFstComp(fst.dat = MarkerInfo,
qst.dat = TraitInfo,
numpops = 14,
breeding.design = "half.sib.dam",
dam.offspring.relatedness = 0,
nsim = 10000)
MarkerInfo,
MarkerInfo
data(biallelic)
ls()
biallelic
biallelic
MarkerInfo
head(MarkerInfo)
head(biallelic)
# Remove missingness
MarkerInfo_noMissing <- MarkerInfo %>% drop_na()
library(tidyverse)
# Remove missingness
MarkerInfo_noMissing <- MarkerInfo %>% drop_na()
dim(MarkerInfo_noMissing)
dim(MarkerInfo)
tmp <- MarkerInfo %>% select(where(~!any(is.na(.))))
dim(tmp)
# Remove missingness
MarkerInfo_noMissing <- MarkerInfo %>% select(where(~!any(is.na(.))))
# Run the analysis
sim <- QstFstComp(fst.dat = MarkerInfo_noMissing,
qst.dat = TraitInfo,
numpops = 14,
breeding.design = "half.sib.dam",
dam.offspring.relatedness = 0,
nsim = 10000)
phylo <- ape::read.nexus("https://paul-buerkner.github.io/data/phylo.nex")
data_simple <- read.table(
"https://paul-buerkner.github.io/data/data_simple.txt",
header = TRUE
)
head(data_simple)
data_simple
table(data_simple$phylo)
ls()
q()
